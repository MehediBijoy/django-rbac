# Generated by Django 5.0.2 on 2024-09-01 18:00

import django.db.models.deletion
import django.utils.timezone
import users.models.user
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='JwtBlackList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp', models.DateTimeField()),
                ('jti', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'jwt black list',
                'verbose_name_plural': 'jwt black lists',
            },
        ),
        migrations.CreateModel(
            name='NotificationContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('triggered_by', models.CharField(max_length=255)),
                ('notification_type', models.CharField(default='system', max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('description', models.JSONField(null=True)),
                ('notification_color', models.CharField(max_length=50, null=True)),
                ('notification_icon', models.CharField(max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'notification content',
                'verbose_name_plural': 'notification contents',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email_confirmed', models.BooleanField(default=False)),
                ('email_confirmed_at', models.DateTimeField(null=True)),
                ('email_confirmation_token', models.CharField(max_length=255, null=True, unique=True)),
                ('email_confirmation_sent_at', models.DateTimeField(null=True)),
                ('email_candidate', models.EmailField(max_length=254, null=True, unique=True)),
                ('forgot_password_token', models.CharField(max_length=255, null=True, unique=True)),
                ('forgot_password_token_sent_at', models.DateTimeField(null=True)),
                ('otp_secret', models.CharField(max_length=255, null=True, unique=True)),
                ('is_otp_active', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('investigate', 'investigate'), ('blocked', 'blocked')], default='active', max_length=25)),
                ('status_reason', models.TextField(null=True)),
                ('role', models.CharField(choices=[('user', 'user'), ('admin', 'admin'), ('editor_admin', 'editor_admin'), ('super_admin', 'super_admin')], default='user', max_length=25)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('-id',),
            },
            managers=[
                ('objects', users.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('payload', models.JSONField(null=True)),
                ('delivery_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('notification_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.notificationcontent')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='UserAccessTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign_in_count', models.IntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('failed_attempts', models.IntegerField(default=0)),
                ('locked_at', models.DateTimeField(null=True)),
                ('user_agent', models.CharField(max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_access_tracks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user_access_track',
                'verbose_name_plural': 'user_access_tracks',
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('payload', models.JSONField(null=True)),
                ('reference', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reference_logs', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User log',
                'verbose_name_plural': 'User logs',
            },
        ),
    ]
